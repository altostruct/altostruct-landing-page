{"version":3,"file":"component---src-pages-404-tsx-50301f5470e8c7f16b37.js","mappings":"wVACW,EAAS,+BACTA,EAAU,gCACVC,EAAY,kCACZC,EAAQ,8BCyCnB,EAhCe,SAACC,GACd,IASqBC,EARnBC,EAMEF,EANFE,SACAC,EAKEH,EALFG,WAFF,EAOIH,EAJFI,KAAAA,OAHF,MAGS,UAHT,EAIEC,EAGEL,EAHFK,KACAC,EAEEN,EAFFM,UACAC,EACEP,EADFO,WAeF,OAZqBN,EAanB,0BACEG,KAAMG,EACND,UAAWE,IAAWF,EAAWG,EAAcA,EAAML,KAEpDF,EAJH,IAIc,KAhBVG,EAEA,qBAAGK,OAAQP,EAAa,cAAWQ,EAAWC,KAAMP,GACjDJ,GAIEA,I,4FCKb,WAAeY,EAAAA,EAAAA,KA5BM,SAACb,GACpB,OAAqCc,EAAAA,EAAAA,KAA7BC,EAAR,EAAQA,EAAR,EAAWC,YAAX,EAAwBC,SACxB,OACE,wBAAMX,UAAU,QACd,gBAAC,IAAD,CAAQY,SAAUlB,EAAMmB,SAASC,WACjC,uBAAKd,UAAU,+BACb,gBAAC,WAAD,CAAaA,UAAU,cACvB,uBAAKA,UAAU,kCACb,+BACE,sBAAIG,MAAO,CAAEY,WAAY,WACtBN,EAAE,OADL,IACa,2BACVA,EAAE,cAEL,yBACE,wBAAMT,UAAU,iBACbS,EAAE,uCAGP,gBAAC,IAAD,CAAQT,UAAU,cAAcD,KAAK,KAClCU,EAAE","sources":["webpack://altostruct-website-gatsby/./src/components/Button/Button.module.scss","webpack://altostruct-website-gatsby/./src/components/Button/Button.tsx","webpack://altostruct-website-gatsby/./src/pages/404.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var button = \"Button-module--button--sRE36\";\nexport var primary = \"Button-module--primary--uHAe9\";\nexport var secondary = \"Button-module--secondary--m8ggv\";\nexport var shiny = \"Button-module--shiny--j2JWL\";","import classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as style from \"./Button.module.scss\";\n\ninterface ButtonProps {\n  children?: string;\n  className?: string;\n  type?: \"primary\" | \"secondary\" | \"shiny\";\n  formAction?: \"submit\" | \"reset\";\n  link?: string;\n  openNewTab?: boolean;\n}\n\nconst Button = (props: ButtonProps) => {\n  const {\n    children,\n    openNewTab,\n    type = \"primary\",\n    link,\n    className,\n    formAction,\n  } = props;\n\n  const LinkWrapper = (cmp: JSX.Element) => {\n    if (link) {\n      return (\n        <a target={openNewTab ? \"_blank\" : undefined} href={link}>\n          {cmp}\n        </a>\n      );\n    } else {\n      return cmp;\n    }\n  };\n\n  return LinkWrapper(\n    <button\n      type={formAction}\n      className={classNames(className, style.button, style[type])}\n    >\n      {children} {\">\"}\n    </button>\n  );\n};\n\nexport default Button;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport Button from \"@components/Button/Button\";\nimport Topbar from \"@components/Topbar/Topbar\";\nimport Icon from \"@components/Icon\";\nimport useTranslation from \"../hooks/useTranslation\";\nimport { withLanguage } from \"../contexts/LanguageContext\";\n\nconst NotFoundPage = (props: any) => {\n  const { t, setLanguage, language } = useTranslation();\n  return (\n    <main className=\"page\">\n      <Topbar pathName={props.location.pathname}></Topbar>\n      <div className=\"content screen-height title\">\n        <Icon.Square className=\"top-image\" />\n        <div className=\"split-content sm-screen-height\">\n          <section>\n            <h1 style={{ whiteSpace: \"nowrap\" }}>\n              {t(\"404\")} <br />\n              {t(\"Not found\")}\n            </h1>\n            <p>\n              <span className=\"white-bg-text\">\n                {t(\"Kunde tyv√§rr inte hitta din sida.\")}\n              </span>\n            </p>\n            <Button className=\"space-right\" link=\"/\">\n              {t(\"Tillbaka\")}\n            </Button>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default withLanguage(NotFoundPage);\n"],"names":["primary","secondary","shiny","props","cmp","children","openNewTab","type","link","className","formAction","classNames","style","target","undefined","href","withLanguage","useTranslation","t","setLanguage","language","pathName","location","pathname","whiteSpace"],"sourceRoot":""}